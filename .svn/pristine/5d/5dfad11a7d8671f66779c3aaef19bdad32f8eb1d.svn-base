<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>

<style>
a {
    color: #000000 !important;
}

#calendar-container {
	width:750px;
	height:700px;
}

.fc .fc-daygrid-more-link {
	font-size: 12px !important;
}

.fc .fc-daygrid-day-number {
	font-size: 13px !important;
}

.fc-daygrid-block-event .fc-event-title {
	font-size: 12px !important;
}

.fc .fc-toolbar-title {
	font-size: 18px !important;
}

.fc .fc-toolbar.fc-header-toolbar {
    margin-bottom: 4px !important;
}

.fc .fc-button-primary {
    background-color: transparent !important;
    border-color: transparent !important;
    color: #000000 !important;
}

.fc .fc-button-primary:hover {
    background-color: transparent !important;
    border-color: transparent !important;
    color: #0ABAB5 !important;
}

.dduk-body-border {
	height: 100% !important;
}

.dduk-dir-col {
	display: flex;
    flex-direction: column;
    gap: 16px;
    width: 40%;
}

.dduck-input {
	height: 30px;
}

.patient-info-div {
	display: flex;
	padding: 16px 8px;
	justify-content: space-between;
}

.patient-info-cal {
	display: flex;
    width: 40%;
    justify-content: space-between;
}

.patient-info-left {
	display: flex;
    gap: 26px;
    flex-direction: column;
}

.patient-info-right {
	display: flex;
    flex-direction: column;
    gap: 16px;
    width: 160px;
}

.form-check-reception {
	display: flex;
    gap: 32px;
}
</style>

<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<!-- sweetalert -->
<script src="/resources/fullcalendar-6.1.10/sweetalert2.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div class="dduk-body-border">
	<div class="dduk-title-area">
		<h2>월간 일정</h2>
	</div>
	<div id='calendar-container'>
	    <div id='calendar'></div>
	</div>
</div>
	
<div class="dduk-dir-col">
	<div class="dduk-body-border" style="height: 300px !important;">
		<div class="dduk-title-area" style="margin-bottom: -8px;">
			<h2>환자 정보 조회 <input type="text" id="search" class="dduck-input search" placeholder="환자 이름을 검색해주세요" autocomplete="off"></h2>

			<svg id="createReservationBtn" type="button" data-bs-toggle="modal" data-bs-target="#createReservationModal"  xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
				<g clip-path="url(#clip0_142_1638)">
					<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"/>
				</g>
				<defs>
				<clipPath id="clip0_142_1638">
					<rect width="24" height="24" fill="white"/>
				</clipPath>
				</defs>
			</svg>
		</div>
		
		<div class="autocomplete"></div>
		<div class="patient-info-div">
		<input type="hidden" id="patientNo" name="patientNo"/>
			<div class="patient-info-cal">
				<div class="patient-info-left">
					<div class="in-h2">이름 : </div>
					<div class="in-h2">나이 : </div>
					<div class="in-h2">연락처 : </div>
					<div class="in-h2">주소 : </div>
				</div>
				<div class="patient-info-right">
					<input type="text" class="dduck-input info-input" id="patientName" disabled/>
					<input type="text" class="dduck-input info-input" id="patientAge" disabled/>
					<input type="text" class="dduck-input info-input" id="patientPh" disabled/>
					<input type="text" class="dduck-input info-input" id="patientAdd" disabled style="width:240px;"/>
				</div>
			</div>
			
			<div class="patient-info-cal">
				<div class="patient-info-left">
					<div class="in-h2">성별 : </div>
					<div class="in-h2">건강보험 : </div>
				</div>
				
				<div class="patient-info-right" style="width: 130px; justify-content: space-between;">
					<div class="patient-info-right">
						<div class="form-check-reception">
							<span>
								<input type="radio" id="male" name="male" class="form-check-input" disabled/>
								<label for="male">남성</label>
							</span>
							<span>
								<input type="radio" id="female" name="female" class="form-check-input" disabled/>
								<label for="male">여성</label>
							</span>
						</div>
						
						<div class="form-check-reception">
							<span>
								<input type="radio" id="insrYes" name="insrYes" class="form-check-input" disabled/>
								<label for="insrYes">여</label>
							</span>
							<span>
								<input type="radio" id="insrNo" name="insrNo" class="form-check-input" disabled/>
								<label for="insrNo">부</label>
							</span>
						</div>
					</div>
					
					<button type="button" class="dduk-btn-active" id="btnAddReception" data-bs-toggle="modal" data-bs-target="#createReceptionModal"
				style="position: relative;">접수</button>
			</div>
				
				<input type="hidden" value="" id="rsvtYN" name="rsvtYN">
				
				
			</div>
		</div>
		
	</div>
	<div class="dduk-body-border w-100 h-100">
		<div class="dduk-title-area" style="margin-bottom: -8px;">
			<h2 class="schedualDate">날짜를 선택해주세요</h2>
		</div>
	
	</div>
</div>


<!-- 	모달	 -->
	<c:import url="../common/modal.jsp"></c:import>

<script>
$(document).ready(function() {
	 var today = new Date();

	 var year = today.getFullYear();
	 var month = ('0' + (today.getMonth() + 1)).slice(-2);
	 var day = ('0' + today.getDate()).slice(-2);
	 var year2 = String(year).substring(2,4);	
	 console.log(month);
	 
	 
	 var dateString = year + '-' + month  + '-' + day;
	 
	 var hours = ('0' + today.getHours()).slice(-2); 
	 var minutes = ('0' + today.getMinutes()).slice(-2);
	 var seconds = ('0' + today.getSeconds()).slice(-2); 

	 var timeString = hours + ':' + minutes;
	 
	 //캘린더 날짜 클릭 이벤트!!!!
	 $(document).on("click",".fc-day", function(){
		let date = $(this).data('date');
		console.log(date);
		
		let calMonth = date.substring(5,7);
		console.log(calMonth);
		let calDay = date.substring(8,10);
		console.log(calDay);
		
		$('.schedualDate').html("");
		$('.schedualDate').append(calMonth+"월 "+calDay+"일, ");
		
		$('#rsvtDt').val(date);
		
	 });
	
})


// 달력 자리 지정
const calendarEl = $('#calendar')[0];
// 현재 날짜 불러와서 문자 형태 맞추기
const date = new Date();
const year = date.getFullYear();

document.addEventListener('DOMContentLoaded', function() {
	// 달력 세부 설정
	const calendar = new FullCalendar.Calendar(calendarEl, {
		// 한국어 설정
		locale : 'ko',
		height: '700px',
		// 화면에 맞게 높이 재설정
		expandRows : true,
		// 이벤트가 오버되면 높이 제한 (+ 몇 개식으로 표현)
		dayMaxEvents: true,
		// 초기 로드 될때 보이는 캘린더 화면(기본 설정: 달)
		initialView : 'dayGridMonth',
		// 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
		navLinks : false,
		// +more 표시 전 최대 이벤트 갯수, true는 셀 높이에 의해 결정
		dayMaxEvents: true,
		// 버튼 만들기
		customButtons : {
			calButton : {
				text : "캘린더",
				click : function() {
					calendar.refetchEvents();
				}
			}
		},
		// 해더에 표시할 툴바
		headerToolbar : {
			left : 'calButton prev,next',
			center : 'title',
			right : 'dayGridMonth'
		},
		
	});
	// 달력 띄우기
	calendar.render();
	
	// 달력 DB 로딩
	let listData = { year : year };
	
	$.ajax({
		url:"/reserve/schList",
		type:"post",
		data: listData,
		dataType: "JSON",
		async: false,
		beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success : function(data, status, xhr){
			$.each(data, function(key, value){
				// DB에서 가져온 일정 리스트 배치
				dsNo = data[key].dsNo;
				start = data[key].dsStrDate;
				end = data[key].dsEndDate;
				content = data[key].dsCont;
				dbCate = data[key].dsCate; // if => color
					if(dbCate === '진료'){
						color = "#0ABAB5";
					}else if(dbCate === '수술'){
						color = "#cce6ff";
					}else if(dbCate === '검사'){
						color = "#d9ccff";
					}else if(dbCate === '연구'){
						color = "#DBF2F4";
					}else{
						color = "#ffcccc";
					}  
				isAllDay = data[key].dsAd; // if => allDay
				
				let eventData = {
				    start: start,
				    end: end,
				    title: content,
				    color: color,
				    allDay: isAllDay,
				    id : dsNo,
				    groupId : dbCate,
				};
				
				// month 달력에 이벤트 출력
				calendar.addEvent(eventData);
				calendar.render();
			});
			
		}, error : function(xhr, status, error){
		  Swal.fire({
			   	title: '데이터 로딩 실패',
			   	text: '새로고침 해주세요.',
			   	icon: 'error',
			   	confirmButtonColor: '#0ABAB5',
			   	confirmButtonText: '확인',
			})
			return;
	  }
	});
})

var dataList = [];

const $search = document.querySelector("#search");
const $autoComplete = document.querySelector(".autocomplete");

let nowIndex = 0;

$search.onkeyup = (event) => {
  // 검색어
  const value = $search.value.trim();

  // 자동완성 필터링
  const matchDataList = value
    ? dataList.filter((label) => label.includes(value))
    : [];

  switch (event.keyCode) {
    // UP KEY
    case 38:
      nowIndex = Math.max(nowIndex - 1, 0);
      break;

    // DOWN KEY
    case 40:
      nowIndex = Math.min(nowIndex + 1, matchDataList.length - 1);
      break;

    // ENTER KEY
    case 13:
      document.querySelector("#search").value = matchDataList[nowIndex].match(/[ㄱ-ㅎㅏ-ㅣ가-힣]+/g).join(" ") || "";
	  var patientId = matchDataList[nowIndex].substring(0,6);
	  console.log(patientId);
	  searchPatientByNo(patientId);
	  $("#rsvtYN").val("RCTY01");
      // 초기화
      nowIndex = 0;
      matchDataList.length = 0;
      break;
      
    // 그외 다시 초기화
    default:
      nowIndex = 0;
      break;
  }

  // 리스트 보여주기
  showList(matchDataList, value, nowIndex);
};

const showList = (data, value, nowIndex) => {
  // 정규식으로 변환
  const regex = new RegExp("(" + value + ")", "g");
  
  $autoComplete.innerHTML = data
  .map(function(label, index) {
    return "<div class='" + (nowIndex === index ? "active" : "") + "'>" +
      label.replace(regex, "<mark>$1</mark>") +
      "</div>";
  })
  .join("");
};
	
//주민번호를 생년월일로 변환
function formatResidentNumber(residentNumber) {
	
	// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
    let year = "";
    if(Number(residentNumber.substr(0,1)) <= 3){
    	year += "20";
    } else {
    	year += "19";
    }
    year += residentNumber.substr(0,2);
    
    
    let month = residentNumber.substr(2,2);
    let day = residentNumber.substr(4,2);
    
    let birthDay = year + "-" + month + "-" + day;
    return birthDay;
}

//생년월일로 만 나이 구하기
function getAge(paBirthDay) {
	
	// 현재날짜, 생일로 날짜계산
    const currentDate = new Date();
    const birthdateDate = new Date(paBirthDay);
    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

    // 현재와 생일의 월, 날짜 얻어주기
	const currentMonth = currentDate.getMonth();
	const birthdateMonth = birthdateDate.getMonth();
	const currentDay = currentDate.getDate();
	const birthdateDay = birthdateDate.getDate();

	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
   		age--;
	}
    return age;
}

var birthDay = "";

//환자 아이디로 환자 정보 가져오고 인풋창에 세팅
function searchPatientByNo(paNo){
	$.ajax({
		url: "/ams/searchPatientByNo",
		contentType:"application/json;charset=utf-8",
		data:paNo,
		type: 'post',
		beforeSend:function(xhr){
		xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
		},
		success: function(rst){
			//주민번호 => 생년월일
			birthDay = formatResidentNumber(rst.paReg);
			//생년월일=> 나이
			let age = getAge(birthDay);
			
			//환자 번호 hidden에 넣기
			$("#patientNo").val(rst.paNo);
			
			$("#patientName").html("");
			$("#patientAge").html("");
			$("#patientPh").html("");
			$("#patientAdd").html("");
			$("#male").attr("checked",false);
			$("#female").attr("checked",false);
			$("#insrYes").attr("checked",false);
			$("#insrNo").attr("checked",false);					
			$("#rsvtYes").attr("checked",false);
			$("#rsvtNo").attr("checked",false);					
			
			$("#patientName").val(rst.paName);
			$("#patientAge").val("만 " + age + "세");
			$("#patientPh").val(rst.paPh);
			$("#patientAdd").val(rst.paAdd1 + " " + rst.paAdd2);
			if(rst.paSex===('남')){
				$("#male").attr("checked",true);
			}else{
				$("#female").attr("checked",true);
			}
			
			if(rst.paInsrYn===('ISYN01')){
				$("#insrYes").attr("checked",true);
			}else{
				$("#insrNo").attr("checked",true);
			}
			
			if($("#rsvtYN").val()===('RCTY02')){
				$("#rsvtYes").attr('checked',true);
			}
// 			else{
// 				$("#rsvtNo").attr('checked',true);
// 			}
			
			$("#search").val("");
		},
		error: function(xhr, status, error){
			console.log('Error:', xhr, status, error);
		}
	});
};

</script>