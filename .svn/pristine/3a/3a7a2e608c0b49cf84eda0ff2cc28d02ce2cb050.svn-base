<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<!DOCTYPE html>
<style>
.dduk-body-border {
	height: calc(50% - 8px);
}
</style>
<div class="col-4 gap-ver-16">
	<div class="dduk-body-border w-100">
		<div class="dduk-title-area">
			<h2>환자 현황</h2>
		</div>
		<!-- 차트 그릴 영역 -->
		<canvas id="myChart" height="300" width="480" ></canvas>
	</div>
	<div class="dduk-body-border w-100">
		<div class="dduk-title-area">
			<h2>지역 별 환자 수 현황</h2>
		</div>
		<!-- 차트 그릴 영역 -->
		<canvas id="myChart2" height="300" width="520" ></canvas>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2.0.0"></script>
<script>
$(document).ready(function() {
    // 빈 차트를 생성한다. 
    var chart = new Chart(document.getElementById("myChart"), {
        type: 'bar',
        data: {
            labels: ['10대 이하', '20대', '30대', '40대', '50대', '60대 이상'],
            datasets: [
                        {label: [], data: [],},
                        {label: [], data: [],},
                        {label: [], data: [],},
                        {label: [], data: [],},
                        {label: [], data: [],},
                        {label: [], data: [],}
            ],
            borderWidth: 1
        },
    });

    <!-- ajax를 이용하여 json 타입의 데이터를 수신 -->
    $.ajax({
    	url: '/common/getPatientList',
		type: 'post',
		dataType: 'json',
		contentType: "application/json; UTF-8",
		beforeSend: function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success: function(rst){
			console.log(rst);
			let m10s = 0;
			let m20s = 0;
			let m30s = 0;
			let m40s = 0;
			let m50s = 0;
			let m60s = 0;

			let f10s = 0;
			let f20s = 0;
			let f30s = 0;
			let f40s = 0;
			let f50s = 0;
			let f60s = 0;

			$.each(rst, function(idx){
			    let birth = formatResidentNumber(rst[idx].paReg);
			    let age = getAge(birth);
			    console.log(rst[idx].paSex);

			    if (rst[idx].paSex == '남') {
			        if (age < 20) {
			            m10s++;
			        } else if (20 <= age && age < 30) {
			            m20s++;
			        } else if (30 <= age && age < 40) {
			            m30s++;
			        } else if (40 <= age && age < 50) {
			            m40s++;
			        } else if (50 <= age && age < 60) {
			            m50s++;
			        } else if (60 <= age) {
			            m60s++;
			        }
			    } else if (rst[idx].paSex == '여') {
			        if (age < 20) {
			            f10s++;
			        } else if (20 <= age && age < 30) {
			            f20s++;
			        } else if (30 <= age && age < 40) {
			            f30s++;
			        } else if (40 <= age && age < 50) {
			            f40s++;
			        } else if (50 <= age && age < 60) {
			            f50s++;
			        } else if (60 <= age) {
			            f60s++;
			        }
			    }
			});
			
			chart.destroy(); // 기존에 생성한 차트 오브젝트를 없앤다. 
            
            // 수신한 json 타입 데이터를 이용하여 차트를 새로 그린다. 
            chart = new Chart(document.getElementById("myChart"), {
                type: 'bar',
                data: {
                    labels: ['10대 이하', '20대', '30대', '40대', '50대', '60대 이상'],
                    datasets: [
                        {	
                        	label:'남',
                            data: [m10s, m20s, m30s, m40s, m50s, m60s],
                            borderColor: 'rgba(255, 0, 0, 0)',
                            backgroundColor:['#5CA0FF']
                        },
                        {	
                        	label:'여',
                            data: [f10s, f20s, f30s, f40s, f50s, f60s],
                            borderColor: 'rgba(255, 0, 0, 0)',
                            backgroundColor:['#FF94D2']
                        }
                    ],
                    borderWidth: 1
                },options:{ 
                	responsive: false,
                    scales: {
	                    	 x: {
	                    	      beginAtZero: true,
	                    	      stacked:true,
	                    	        scaleLineColor: 'red',
	                    	          grid: {
	                    	            color: 'transparent',
	                    	          },
	                    	       },
	                    	     y: {
	                    	       beginAtZero: true,
	                    	       stacked:true,
	                    	         grid: {
	                    	           color: 'transparent',
	                    	         },
	                    	    	}
                      		},
                    plugins: {
                    	 legend: {
                   	        position: 'right',
                   	        align: 'start'
                   	  	}
                    }
                  }
            });
			
		},
		error: function(xhr, status, error){
			console.log('Error:', xhr, status, error);
		}
    });
    <!-- 코드 생략 -->

});

//주민번호로 만나이 계산
function getAge(paBirthDay) {
	
	// 현재날짜, 생일로 날짜계산
    const currentDate = new Date();
    const birthdateDate = new Date(paBirthDay);
    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

    // 현재와 생일의 월, 날짜 얻어주기
	const currentMonth = currentDate.getMonth();
	const birthdateMonth = birthdateDate.getMonth();
	const currentDay = currentDate.getDate();
	const birthdateDay = birthdateDate.getDate();

	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
   		age--;
	}
    return age;
}

//주민번호를 생년월일로 변환
function formatResidentNumber(residentNumber) {
	
	// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
    let year = "";
    if(Number(residentNumber.substr(0,1)) <= 3){
    	year += "20";
    } else {
    	year += "19";
    }
    year += residentNumber.substr(0,2);
    
    let month = residentNumber.substr(2,2);
    let day = residentNumber.substr(4,2);
    
    let birthDay = year + "-" + month + "-" + day;
    
    return birthDay;
}
</script>
