<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"  %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
<style>
.selected {
	background-color: #EDF8F9;
}
.search{
	background-image: url(/resources/images/Search.png);
	background-repeat: no-repeat;
	background-position: calc(100% - 10px) center;
	width: 285px;
	height: 30px;
	margin-left: 0px;
}
.treatment-center-wrap{
	width: 892px;
	display: flex;
    gap: 16px;
}
.patient-detail {
	width: 300px;
	height: 350px;
	flex-shrink: 0;
	margin-bottom: 20px;
}
.in-h2 {
	font-size: 14px !important;
}
.treatment-tab-wrap {
	display: flex;
    gap: 24px;
    justify-content: space-evenly;
    margin-top: -32px;
}
.rounds-tab {
	margin-top: 32px;
    border-top-right-radius: 18px;
    border-top-left-radius: 18px;
    border: 1px solid var(--border, #E0E8E6);
    border-bottom: none;
    padding: 16px;
    background: var(--white, #FFF);
    width: 35%;
    padding: 4px;
    text-align: center;
    color: #000;
    cursor: pointer;
}
.patient-chart{
	width: 580px;
	height: 320px;
	flex-shrink: 0;
	margin-bottom: 20px;
}
.patient-chart-list-date{
    width: 120px;
    margin: 0px -16px -16px -16px;
    padding: 16px 0px 16px 16px;
    overflow-y: scroll;
    overflow-x: hidden;
}
.treatment-detail{
	height: 470px;
}
.treatment-chart-header {
	border-bottom: 1px solid #EBEFF0;
}
.treatment-chart {
    width: 360px;
    height: 400px;
}
.treatment-chart-list{
    height: 284px;
    width: 155px;
    margin: 0px -16px -16px -16px;
    padding: 8px 16px 16px 16px;
    border-right: 1px solid var(--border, #EBEFF0);
    overflow-y: scroll;
    overflow-x: hidden;
}
.treatment-chart-detail {
    width: 543px;
    height: 267px;
    margin: 8px -17px -16px 16px;
    padding: 0px 16px 16px 16px;
    border-radius: 0px 0px 24px 0px;
}
.treatment-chart-body-top {
	padding-top: 8px;
}
.clinic-history-body{
	width: 400px;
	height: 300px;
	overflow-x: hidden;
	overflow-y: scroll;
	padding: 16px;
}
.h1-default {
	text-align: center;
	width: 100%;
	margin-top: 90px;
	color: #8D9EA5 !important;
	font-size: 2em !important;
}
.calendar-wrap {
	display: flex;
    gap: 24px;
    justify-content: space-evenly;
}
.nurse-record-tab {
	margin-top: 24px;
	display: flex;
	justify-content: space-evenly;
}
.nurse-record {
    height: 392px;
}
.nurse-record-element {
	border-top-right-radius: 18px;
    border-top-left-radius: 18px;
    border: 1px solid var(--border, #E0E8E6);
    border-bottom: none;
    padding: 16px;
    background: var(--white, #FFF);
    width: 25%;
    padding: 1px;
    text-align: center;
    cursor: pointer;
    color: #000;
}
.icon-calendar {
	width: 48px;
	height: 48px;
}
.icon-stethoscope {
	width: 42px;
	height: 42px;
}

.clinic-history-head {
	border-right: 1px solid var(--border, #EBEFF0);
	height: 300px;
    overflow-y: scroll;
    width: 120px;
}
.textarea-clinic-history-injnm {
    resize: none;
    width: 93%;
    height: 50px;
}
.textarea-clinic-history-opinion {
    resize: none;
    width: 93%;
    height: 80px;
}
.textarea-treatment-history-tmNm{
	resize: none;
    width: 93%;
    height: 50px;
	
}
.textarea-treatment-history-trodCont {
    resize: none;
    width: 93%;
    height: 80px;
}
.table-clinic-history {
	display: flex;
	padding: 12px 0px;
	flex-direction: column;
	justify-content: center;
	gap: 4px;
	border-radius: 12px;
	background: var(--bg-01, #F8F9FC);
	width: 380px;
	height: auto;
	margin-bottom: 16px;
}
.tab-active {
	background-color: #F8F9FC;
	color: #8D9EA5;
	font-family: 'Pretendard5';
}
.treatment-history-head{
	display: flex;
	border-radius: 10px;
    border: 1px solid var(--border, #E0E8E6);
    padding: 8px;
    width: 150px;
    height: 80px;
    flex-shrink: 0;
    flex-direction: column;
}
</style>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
$(function(){
	var header = $("meta[name='_csrf_header']").attr("content");
	var token = $("meta[name='_csrf']").attr("content");
	
	//치료완료 환자리스트 출력
	treatmentPatientList();
	
	function treatmentPatientList(){
		$.ajax({
			url: '/treatment/treatmentPatientList',
			dataType: 'json',
			type: 'post',
			beforeSend:function(xhr){
				xhr.setRequestHeader(header,token);
			},
			success: function(result){
				console.log("치완환자 출력!!", result);	
				
				$.each(result, function(i){
					var str = "";
					str += '<tr class="tr-padding tr-paInfo" data-paNo="'+ result[i].paNo +'">';
					str += '<td class="td-padding">'+(i + 1)+'</td>';
					str += '<td height="48px" class="td-padding">'+ truncateText(result[i].paName) +'</td>';
					str += '<td class="td-padding">'+ formatResidentNumber(result[i].paReg) +'</td>';
					//str += '<th class="td-padding">';
					//str += '</th>';
					str += '</tr>';
					
					$('#patient-list-table').append(str);
				});
				
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	}
	
	// 특정 환자 누를 때
	$(document).on("click", ".tr-paInfo", function() {
		console.log("환자를 클릭!!");
		
		//환자번호 가져오기
		var paNo = $(this).data('pano');
		currentPaNo = paNo;
		
		//환자정보갱신
		updatePaInfo(paNo);
		//환자의 과거진료내역
		updatePastClinicChart();
		//환자 진료내역 내용
	});
	
	// 환자 정보 갱신
    function updatePaInfo(paNo){
    	$.ajax({
    		url: '/treatment/selectTreatmentPatientInfo',
    		data: {'paNo' : paNo},
    		type: 'post',
    		dataType: 'json',
    		beforeSend: function(xhr){
    			xhr.setRequestHeader(header,token);
    		},
    		success: function(result){
    			console.log("클릭한 환자 정보 가져오기 : ", result);
    			var patientInfo = $('.patient-info-div');
    			patientInfo.find('h2').eq(0).text('이름 : ' + result.paName);
    			patientInfo.find('h2').eq(1).text('성별 : ' + result.paSex);
    			patientInfo.find('h2').eq(2).text('나이 : ' + getAge(formatResidentNumber(result.paReg)));
    			patientInfo.find('h2').eq(3).text('연락처 : ' + result.paPh);
    			patientInfo.find('h2').eq(4).text('주소 : ' + result.paAdd1 + ' ' + result.paAdd2);
    			patientInfo.find('h2').eq(5).text('혈액형 : ' + result.paBldType);
    			patientInfo.find('h2').eq(6).text('키 : ' + result.paHeight + 'cm');
    			patientInfo.find('h2').eq(7).text('몸무게 : ' + result.paWeight + 'kg');
    		},
    		error: function(xhr, status, error){
    			console.log('Error:', xhr, status, error);
    		}
    	});
    }
	
 	// 진료내역/입원내역 탭 누를때 이벤트
    $(document).on('click', '.rounds-tab', function() {
    	
    	// 자신에겐 tab-active를 제거, 다른 하나의 탭엔 tab-active 적용
    	$(this).removeClass('tab-active');
    	$('.rounds-tab').not(this).addClass('tab-active');
    	// 진료내역 번호 가져오기
		var tmCd = $(this).data('tmcd');
		console.log("날짜 클릭 치료번호 : ", tmCd);
		
		var clinicNo = $(this).data('clinicno');
		console.log("날짜 클릭 진료번호 : ", clinicNo);
		
		// 날짜 클릭시 진료 내용 출력
		
    	// 만약 진료내역이면
    	if($(this).text() === '진료내역'){
    		// 진료내역 갱신
    		updatePastClinicChart();
    	// 만약 치료내역이면
    	} else if($(this).text() === '치료내역'){
    		// 치료내역 갱신
    		selectTreatmentPatientInfo(tmCd, clinicNo);
    		
    	}
    });
	
 	// 과거 진료 내역 심플 리스트 갱신
    function updatePastClinicChart(){
    	$.ajax({
    		url: '/clinic/simpleClinicChartList',
    		data: {'paNo' : currentPaNo},
    		type: 'post',
    		dataType: 'json',
    		beforeSend: function(xhr){
    			xhr.setRequestHeader(header,token);
    		},
    		success: function(result){
    			console.log("클릭한 환자 과거진료내역!!!", result);
    			$('.clinic-history-head').html("");
    			
    			var firstClinicNo = '';
    			var str ="";
    			
    			$.each(result.clinicChartVOList, function(i, vo){
    				if(i === 0){
	   					firstClinicNo = vo.clinicNo;
	   					str += '<div data-clinicno="'+ vo.clinicNo +'" class="patient-chart-list-date selected" style="font-size:17px">' + vo.clinicDt + '</div>';
    				}else{
    					str += '<div data-clinicno="'+vo.clinicNo+'" class="patient-chart-list-date" style="font-size:17px">' + vo.clinicDt + '</div>';
    				}
    			});
    			
				$('.clinic-history-head').append(str);
				
				if($('#clinicHistory').hasClass('tab-active')){
    				$('#treatmentHistory').addClass('tab-active');
    				$('#clinicHistory').removeClass('tab-active');
    			}
				
				// 첫번째 진료내역 디테일 출력
    			detailPastClinicChart(firstClinicNo);
    		}
    	});
 	}
 	
 	// 진료내역 날짜 클릭시 이벤트
	$(document).on('click', '.patient-chart-list-date', function(){
		
		$('.patient-chart-list-date.selected').removeClass('selected');
	    
	    // 클릭한 날짜에 'selected' 클래스 추가
	    $(this).addClass('selected');
		
		// 진료내역 번호 가져오기
		var clinicNo = $(this).data('clinicno');
		console.log("날짜 클릭 진료번호 : ", clinicNo);
		
		// 날짜 클릭시 진료 내용 출력
		detailPastClinicChart(clinicNo);
	});
 	
 	
	function detailPastClinicChart(clinicNo){
		$.ajax({
    		url: '/clinic/lightWeightClinicChartDetail',
    		data: {'clinicNo' : clinicNo},
    		type: 'post',
    		dataType: 'json',
    		beforeSend: function(xhr){
    			xhr.setRequestHeader(header, token);
    		},
    		success: function(rst){
    			console.log('진료번호 ', clinicNo, '로 가져온 진료상세 : ', rst);
    			
    			var clinicInjnm = rst.clinicInjnm === null ? '병명 없음' : rst.clinicInjnm;
    			var clinicOpinion = rst.clinicOpinion === null ? '소견 없음' : rst.clinicOpinion;
    			
    			var str = `
    				<h4>진단명</h4>
    				<textarea class="dduck-input textarea-clinic-history-injnm" readonly="readonly">`+clinicInjnm+`</textarea>
    				<br><br>
    				
    				<h4>소견</h4>
    				<textarea class="dduck-input textarea-clinic-history-opinion" readonly="readonly">`+clinicOpinion+`</textarea>
    				<br><br>
    			
    				<h4>진단</h4>
    				<div class="table-clinic-history">
    					<table>
    						<thead>
    							<tr>
    								<th class="gray-text" style="width: 15%">분류</th>
    								<th class="gray-text" style="width: 40%">상병명</th>
    								<th class="gray-text" style="width: 30%">발병일</th>
    								<th class="gray-text" style="width: 15%">환부</th>
    							</tr>
    						</thead>
    						<tbody>`;
    						
    						// 상병 진단 출력
    						$.each(rst.injuryDiagnosisVOList, function(index, vo){
    							str += '<tr>';
    							if(vo.indiType === 'IDTY01'){
    								str += '<td>주</td>';
    							} else if(vo.indiType === 'IDTY02'){
    								str += '<td>부</td>';
    							} else if(vo.indiType === 'IDTY03'){
    								str += '<td>배제</td>';
    							}
								str += '<td>'+truncateText(vo.injuryVO.ijNm, 12)+'</td>';
								str += '<td>'+vo.indiDt+'</td>';
								str += '<td>'+vo.injuryBodyCdNm+'</td>';
								str += '</tr>'
    						});
    							
    				str += `
    						</tbody>
    					</table>
    				</div>
    				<br>`;
    				
    				// 검사 받은 내역이 없으면 출력 x
    				if(rst.testOrderVOList.length !== 0) {
    				str += `
    				<h4>검사</h4>
    				<div class="table-clinic-history">
    					<table>
    						<thead>
    							<tr>
    								<th class="gray-text" style="width: 25%">검사명</th>
    								<th class="gray-text" style="width: 60%">검사결과</th>
    								<th class="gray-text" style="width: 15%">환부</th>
    							</tr>
    						</thead>
    						<tbody>`;

    						// 검사 오더 출력
    						$.each(rst.testOrderVOList, function(index, vo){
    							
    							// 만약 사진결과가 있으면 사진데이터 json으로 저장
    							if(vo.atchFileVO != null){
    								
    								jsonData = '{\"atchFileDetailVOList\": [';
    								
    									$.each(vo.atchFileVO.atchFileDetailVOList, function(i, detailVO){
    										jsonData += '{"atchFileDetailOrlng": "'+detailVO.atchFileDetailOrlng+'", "atchFileDetailSavenm": "'+detailVO.atchFileDetailSavenm+'"}';						

    										if(vo.atchFileVO.atchFileDetailVOList.length != (i+1)){
    											jsonData += ',';
    										}
    									})
    									
    									jsonData += ']}';
    							}
    							
    							str += '<tr>';
								str += '<td>'+vo.testVO.testNm+'</td>';
								if(vo.teodRst != null){
								str += '<td>'+vo.teodRst+'</td>';
// 								} else if(vo.atchFileVO != null){
// 									str += `<td>
// 										<div class="viewTestResult" data-resultJson='\${jsonData}' data-bs-toggle="modal" data-bs-target="#viewTestOrderResult">
// 											결과보기
// 											<img id="magnifyingGlass" src="/resources/images/icons/magnifying-glass.png" alt="magnifyingGlass.png" />
// 										</div>	
// 									</td>`;
								} else {
									str += `<td>검사 미진행</td>`;
								}
								
								if(vo.testOrderBodyCdNm !== null){
									str += '<td>'+vo.testOrderBodyCdNm+'</td>';
								} else {
									str += '<td>-</td>';
								}
								str += '</tr>'
    						});
    						
    				str +=	`</tbody>
    					</table>
    				</div>
    				<br>`;
    				}
    				
    				// 처방 받은 내역이 없으면 출력 x
    				if(rst.medicineOrderVOList.length !== 0) {
    				str += `
    				<h4>처방</h4>
    				<div class="table-clinic-history">
    					<table>
    						<thead>
    							<tr>
    								<th class="gray-text w-25">이름</th>
    								<th class="gray-text w-60">약품상세</th>
    								<th class="gray-text w-15">처방량</th>
    							</tr>
    						</thead>
    						<tbody>`;
    							
    						// 처방 오더 출력
    						$.each(rst.medicineOrderVOList, function(index, vo){
    							str += '<tr>';
								str += '<td>'+truncateText(vo.medicineVO.mediNm, 6)+'</td>';
								str += '<td>'+truncateText(vo.medicineVO.mediDetail, 16)+'</td>';
								if(vo.medicineVO.mediDetail === '주사' || vo.medicineVO.mediDetail === '기타 처방'){
									str += '<td>-</td>';
								} else if(vo.medicineVO.mediDetail === '패치형 진통제' || vo.medicineVO.mediDetail === '연고'){
									str += '<td>'+vo.mdodQt+'개</td>';
								} else{
									str += '<td>'+vo.mdodQt+'일분</td>';
								}
								
								str += '</tr>';
    						});
    						
    				str += `</tbody>
    					</table>
    				</div>
    				<br>`;
    				}
    				
    			$('.clinic-history-body').html(str);
    		}
		});
	}
	
	// 치료내역 날짜 클릭시 이벤트
	$(document).on('click', '.treatment-chart-list-date', function(){
		
		$('.treatment-chart-list-date.selected').removeClass('selected');
	    
	    // 클릭한 날짜에 'selected' 클래스 추가
	    $(this).addClass('selected');
		
		// 진료내역 번호 가져오기
		var tmCd = $(this).data('tmcd');
		console.log("날짜 클릭 치료번호 : ", tmCd);
		
		var clinicNo = $(this).data('clinicno');
		console.log("날짜 클릭 진료번호 : ", clinicNo);
		
		// 날짜 클릭시 진료 내용 출력
		//selectTreatmentPatientInfo(tmCd, clinicNo);
		selectTreatmentInfo(tmCd, clinicNo);
		
	});
	
	function selectTreatmentPatientInfo(tmCd, clinicNo){
		console.log("치료내역 탭 출력!!");
		
		$.ajax({
    		url: '/treatment/selectTreatmentPatientInfo',
    		data: {'paNo' : currentPaNo},
    		type: 'post',
    		dataType: 'json',
    		beforeSend: function(xhr){
    			xhr.setRequestHeader(header,token);
    		},
    		success: function(result){
    			console.log("과거 치료내역 가져오기!! : ", result);
    			$('.clinic-history-head').html("");
    			//$('.clinic-history-body').html("");
    			
    			//치료내역 없을때
    			if(result.clinicChartVOList.length < 2){
					var str = '<h1 class="h1-default">치료 내역이 없습니다</h1>';    				
	    			$('.clinic-history-body').html(str);
	    		//있을때
    			}else{
    				var firstTreatmentNo = '';
    				var str = '';
    				$.each(result.clinicChartVOList, function(i, vo){
    					if (i >= 1) { // 두 번째 요소부터 처리
		    				console.log("치료기록 들어오나? 1 : ",vo.treatmentOrderVOList[0].trodCont);
		    				console.log(vo.treatmentOrderVOList[0].tmCd);
	    					
		    				//만약 맨 앞의 치료내역이면 선택효과 적용 및 첫번째 치료번호 받아놓기
	    					if(i === 0){
	    						firstTreatmentNo = vo.treatmentOrderVOList[0].tmCd;
	    						console.log(firstTreatmentNo);
	    						str += '<div data-tmcd="'+ vo.treatmentOrderVOList[0].tmCd +'" data-clinicno="'+ vo.clinicNo +'" class="treatment-chart-list-date selected" style="font-size:17px">' + vo.clinicDt + '</div>';
	    					} else {
	    						str += '<div data-tmcd="'+ vo.treatmentOrderVOList[0].tmCd +'" data-clinicno="'+ vo.clinicNo +'" class="treatment-chart-list-date" style="font-size:17px">' + vo.clinicDt + '</div>';
	    					}
    					}
    					
    				});
    			
                    $('.clinic-history-head').append(str);
                    
                    selectTreatmentInfo(firstTreatmentNo);
//                    	var cont = '';
                    
//                     $.each(result.clinicChartVOList, function(i, vo){
                    	
//                     	if (i >= 1) { // 두 번째 요소부터 처리
    						
// 	                    	console.log("진료번호 : ", vo.treatmentOrderVOList[0].clinicNo);
    						
// 	                    	let tmNm = result.clinicChartVOList[0].treatmentOrderVOList[0].treatmentVO.tmNm === null ? '치료명 없음' : result.clinicChartVOList[0].treatmentOrderVOList[0].treatmentVO.tmNm;
// 	                    	let trodCont = vo.treatmentOrderVOList[0].trodCont === null ? '치료기록이 없습니다' : vo.treatmentOrderVOList[0].trodCont;
	                    	
//     						if(vo.treatmentOrderVOList[0].clinicNo === clinicNo){
// 		                    	cont += '<h4>치료명</h4>';
// 		                    	cont += '<textarea class="dduck-input textarea-treatment-history-tmNm" readonly="readonly">' + tmNm + '</textarea>';
// 		                    	cont += '<br><br>';
// 		                    	cont += '<h4>치료기록</h4>';
// 		                    	cont += '<textarea class="dduck-input textarea-treatment-history-trodCont" readonly="readonly">' + trodCont + '</textarea>';
// 		                    	cont += '<br><br>';
//     						}
//     					}
//                     });                    
//                    	$('.clinic-history-body').html(cont);
    			}
    			
    		}
		});
	}
	
	function selectTreatmentInfo(tmCd, clinicNo){
		$.ajax({
    		url: '/treatment/selectTreatmentPatientInfo',
    		data: {'paNo' : currentPaNo},
    		type: 'post',
    		dataType: 'json',
    		beforeSend: function(xhr){
    			xhr.setRequestHeader(header,token);
    		},
    		success: function(result){
    			
    			//var str = '<h1 class="h1-default">치료 내역</h1>';    				
    			//$('.clinic-history-body').html(str);
    			
           	var cont = '';
                
            $.each(result.clinicChartVOList, function(i, vo){
             	
            	if (i >= 1) { // 두 번째 요소부터 처리
						
                	console.log("진료번호 : ", vo.treatmentOrderVOList[0].clinicNo);
						
                 	let tmNm = result.clinicChartVOList[0].treatmentOrderVOList[0].treatmentVO.tmNm === null ? '치료명 없음' : result.clinicChartVOList[0].treatmentOrderVOList[0].treatmentVO.tmNm;
                 	let trodCont = vo.treatmentOrderVOList[0].trodCont === null ? '치료기록이 없습니다' : vo.treatmentOrderVOList[0].trodCont;
                 	
					//if(vo.treatmentOrderVOList[0].clinicNo === clinicNo){
	                   	cont += '<h4>치료명</h4>';
	                   	cont += '<textarea class="dduck-input textarea-treatment-history-tmNm" readonly="readonly">' + tmNm + '</textarea>';
	                   	cont += '<br><br>';
	                   	cont += '<h4>치료기록</h4>';
	                   	cont += '<textarea class="dduck-input textarea-treatment-history-trodCont" readonly="readonly">' + trodCont + '</textarea>';
	                    cont += '<br><br>';
					//}
				}
            });                    
            	$('.clinic-history-body').html(cont);
    		}
		});
	}
	// 이름 등이 글자를 제어하고 싶을 때 maxLength까지만 표시
	function truncateText(text, maxLength) {
		if (text.length > maxLength) {
			return text.slice(0, maxLength) + '...';
		} else {
		    return text;
		}
	}
	
	// 날짜형식 데이터를 넣으면 yyyy-MM-dd(요일) 로 변환해주는 함수
	function formatDateString(dateString) {
		// 요일먼저 얻기
		const week = ['일', '월', '화', '수', '목', '금', '토'];
		const dayOfWeek = week[new Date(dateString).getDay()];
		
		const dateData = new Date(dateString);
		let year = dateData.getFullYear();
		let month = dateData.getMonth(); 
		let date = dateData.getDate()
		
		let dateStr = `\${year}-\${month}-\${date}(\${dayOfWeek})`;
		
		return dateStr;
	}
	
	// 주민번호를 생년월일로 변환
	function formatResidentNumber(residentNumber) {
		
		// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
	    let year = "";
	    if(Number(residentNumber.substr(0,1)) <= 3){
	    	year += "20";
	    } else {
	    	year += "19";
	    }
	    year += residentNumber.substr(0,2);
	    
	    
	    let month = residentNumber.substr(2,2);
	    let day = residentNumber.substr(4,2);
	    
	    let birthDay = year + "-" + month + "-" + day;
	    return birthDay;
	}
	
	// 주민번호로 만나이 계산
	function getAge(paBirthDay) {
		
		// 현재날짜, 생일로 날짜계산
	    const currentDate = new Date();
	    const birthdateDate = new Date(paBirthDay);
	    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

	    // 현재와 생일의 월, 날짜 얻어주기
    	const currentMonth = currentDate.getMonth();
    	const birthdateMonth = birthdateDate.getMonth();
    	const currentDay = currentDate.getDate();
    	const birthdateDay = birthdateDate.getDate();

    	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
    	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
       		age--;
    	}

	    return age;
	}
});
</script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
<div class="dduk-body-border patient-list">
	<div>
		<div class="dduk-title-area" style="margin-bottom: 0px;">
			<h2>치료 완료 환자</h2>
		</div>
		<div class="d-flex">
			<input type="text" id="search" class="search dduck-input" placeholder="환자 이름/번호를 입력해 주세요" autocomplete="off">
		<div class="autocomplete"></div>
		</div>
		<div class="dduk-x-pd8">
			<table class="patient-list-table" id="patient-list-table" style="text-align: center;">
				<tr class="tr-padding">
					<th class="td-padding gray-text" style="width:20px;">No</th>
					<th class="td-padding gray-text paName" style="width:90px;">이름</th>
					<th class="td-padding gray-text" style="width:110px">생년월일</th>
				</tr>
			</table>
		</div>	
	</div>
</div>
<div>
	<div class="treatment-center-wrap">
		<div class="dduk-body-border patient-detail">
			<div class="dduk-title-area">
				<h2>환자 정보 조회</h2>
			</div>
			<div class="patient-info-div">
				<div class="dduk-row">
					<h2 class="in-h2" style="width:100%">이름 : </h2>
				</div>
				<div class="dduk-row">
					<h2 class="in-h2" style="width:50%">성별 : </h2>
					<h2 class="in-h2" style="width:50%">나이 : </h2>
				</div>
				<div class="dduk-row">
					<h2 class="in-h2" style="width:100%">연락처 : </h2>
				</div>
				<div class="dduk-row">
					<h2 class="in-h2" style="width:100%">주소 : </h2>
				</div>
				<div class="dduk-row">
					<h2 class="in-h2" style="width:33%">혈액행 : </h2>
				</div>
				<div class="dduk-row">
					<h2 class="in-h2" style="width:50%">키 : </h2>
					<h2 class="in-h2" style="width:50%">몸무게 : </h2>
				</div>
			</div>
		</div>
	<div>
		<div class="dduk-row treatment-tab-wrap">
			<div class="rounds-tab" id="clinicHistory">진료내역</div>
			<div class="rounds-tab tab-active" id="treatmentHistory">치료내역</div>
		</div>
		<div class="dduk-inner-border patient-chart">
			<div class="dduk-row clinic-history-list">
				<div class="clinic-history-head">
					<!-- 진료내역 날짜 들어오는곳 -->
				</div>
				<div class="clinic-history-body">
					<!-- 진료내역 가져오기 -->
					<h1 class="h1-default">환자를 선택해주세요</h1>
				</div>
			</div>
		</div>
	</div>
	</div>
	<div>
		<div class="dduk-body-border treatment-detail" style="position: relative;">
			<div class="treatment-chart-record-wrap">
				<div class="dduk-title-area treatment-chart-header">
					<div class="d-flex">
						<h2>치료차트</h2>
					</div>
				</div>
				<div class="d-flex treatment-chart-body">
					<div class="treatment-chart-list">
						
					</div>
	
					<div class="treatment-chart-detail">
						<div class="treatment-chart-body-top">
							<div class="calendar-wrap">
								<div class="dduk-row">
									<img class="icon-stethoscope" src="/resources/images/icons/stethoscope.png">
									<div class="date-wrap">
										<div>담당의사</div>
										<div class="empName">김영남</div>
									</div>
								</div>
			
								<div class="dduk-row"> 
									<img class="icon-calendar" src="/resources/images/icons/calendar.png">
									<div class="date-wrap">
										<div>치료일시</div>
										<div class="inDt">2023-12-22</div>
									</div>
								</div>
	
								<div class="dduk-row">
									<img class="icon-calendar" src="/resources/images/icons/calendar.png">
									<div class="date-wrap">
										<div>퇴원예정일</div>
										<div class="expOutDt">2023-12-28</div>
									</div>
								</div>
	
							</div>
						</div>
						<div class="treatment-chart-cont flex-d-col">
							<div class="treatment-chart-write-title">
								<h2>차트작성</h2>
								<button class="dduk-btn-info btn-treatment-chart-save">저장</button>
							</div>
							<div class="dduk-row">
								<textarea id="treatmentCont" class="dduck-input"></textarea>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<div class="nurse-wrap">
			
	<div class="dduk-body-border nurse-chart">
		<div class="dduk-title-area nurse-chart-head">
			<h2>통계</h2>
			<input type="text" name="datepicker-nurse-chart" id="datepickerNurseChart" style="display: none">
		</div>
		<div class="nurse-chart-body">
			<div class="nurse-chart-list">
				<div class="nurse-chart-list-date">통계통계</div>
			</div>
		</div>
	</div>
	
	<div class="nurse-record-tab">
		<div class="nurse-record-element">통계</div>
		<div class="nurse-record-element tab-active">통계</div>
		<div class="nurse-record-element tab-active">통계</div>
	</div>
	<div class="dduk-body-border nurse-record">
		<div class="nurse-record-body">통계통계</div>
	</div>
	
</div>